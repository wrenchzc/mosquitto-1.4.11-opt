#安装依赖
yum -y install gcc gcc-c++ libstdc++-devel 
yum -y install openssl-devel
yum -y install c-ares-devel
yum -y install uuid-devel
yum -y install libuuid-devel

#解压安装
1.网上下一个mosquitto的包！！！ 上传到centOS
#上传命令 
yum -y install lrzsz  #安装lrzsz
rz 命令 上传到当前文件夹下
sz file.name 保存到选择的目录下

2.正式开始
tar -zxvf mosquitto-1.6.7.tar.gz	#要根据自己下载的来解压
cd mosquitto-1.6.7/		#进入mosquitto文件夹
make && make install	#安装
cd /etc/mosquitto/		#进入目录
cp mosquitto.conf.example mosquitto.conf	#拷贝并改名

#配置文件 用户配置 权限管理
  /etc/mosquitto/  下的文件
1、mosquitto中最最最重要的配置文件mosquitto.conf
2、pwfile.example (保存用户名与密码)
3、aclfile.example (保存权限配置)

1、新增用户（多个）
mosquitto.conf（或者自己命名的）
去掉前面的  #  才能执行
allow_anonymous = false  #设置不允许匿名访问（不安全）
password_file /etc/mosquitto/pwfile.example
(我这里复制了一个自己的来用 tc_pwfile.example)

创建一个用户的命令（用这个命令创建的用户会覆盖之前的用户）
mosquitto_passwd -c /etc/mosquitto/tc_pwfile.example tangcong
输入两次密码
这时tc_pwfile.example里面的文件改了 tangcong:看不懂的码（密码）

创建用户的命令（多个） 或者-b
mosquitto_passwd /etc/mosquitto/tc_pwfile.example tangcong001
输入两次密码

删除一个用户
mosquitto_passwd -D /etc/mosquitto/文件  用户名 

##此后所有客户端连接Mosquitto服务都需要输入用户密码了

#启动服务以 mosquitto_tc.conf
mosquitto -c /etc/mosquitto/mosquitto_tc.conf -d
  1. #报错Error: Invalid user 'mosquitto'.  就输入  
     adduser mosquitto

#放开防火墙端口
firewall-cmd --zone=public --add-port=1884/tcp --permanent
firewall-cmd --reload #重载

#如果要结束进程
ps -aux | grep mosquitto 查找这个相关的进程
kill掉对应的进程 再启动一遍


Mosquitto常用指令
订阅主题
mosquitto_sub -h 172.17.4.108 -p 1884 -u tangcong -P tangcong -t $SYS/broker/publish/messages/sent
推送消息
mosquitto_pub -h 192.168.0.1 -p 1883 -u root -P root -t topicname -m "发送的消息内容"

启动命令
mosquitto [-c config file] [ -d | --daemon ] [-p port number] [-v]

-c 后面跟的是启动mosquitto可以调整的参数，比如是否开启基本认证，端口是什么，SSL单向和双向的认证配置等等。
-d 表示MQTT mosquitto将在后台运行。
-p 代表当前的mosquitto服务实例启动以后，其监听端口号，这个配置的覆盖[-c config file] 指定的配置文件中的端口
-v 代码调试模式（verbose）可以输出更多的信息

mosquitto_pub 命令参数
-d 打印debug信息
-f 将指定文件的内容作为发送消息的内容
-h 指定要连接的域名 默认为localhost
-i 指定要给哪个clientId的用户发送消息
-I 指定给哪个clientId前缀的用户发送消息
-m 消息内容
-n 发送一个空（null）消息
-p 连接端口号
-q 指定QoS的值（0,1,2）
-t 指定topic
-u 指定broker访问用户
-P 指定broker访问密码
-V 指定MQTT协议版本
--will-payload 指定一个消息，该消息当客户端与broker意外断开连接时发出。该参数需要与--will-topic一起使用
--will-qos Will的QoS值。该参数需要与--will-topic一起使用
--will-retain 指定Will消息被当做一个retain消息（即消息被广播后，该消息被保留起来）。该参数需要与--will-topic一起使用
--will-topic 用户发送Will消息的topic

mosquitto_sub 命令参数说明
-c 设定‘clean session’为无效状态，这样一直保持订阅状态，即便是已经失去连接，如果再次连接仍旧能够接收的断开期间发送的消息。
-d 打印debug信息
-h 指定要连接的域名 默认为localhost
-i 指定clientId
-I 指定clientId前缀
-k keepalive 每隔一段时间，发PING消息通知broker，仍处于连接状态。 默认为60秒。
-q 指定希望接收到QoS为什么的消息 默认QoS为0
-R 不显示陈旧的消息
-t 订阅topic
-v 打印消息
--will-payload 指定一个消息，该消息当客户端与broker意外断开连接时发出。该参数需要与--will-topic一起使用
--will-qos Will的QoS值。该参数需要与--will-topic一起使用
--will-retain 指定Will消息被当做一个retain消息（即消息被广播后，该消息被保留起来）。该参数需要与--will-topic一起使用
--will-topic 用户发送Will消息的topic


问题二：执行mosquitto客户端程序时出现找不到动态库：libmosquitto.so.1


./mosquitto_sub: error while loading shared libraries: libmosquitto.so.1: cannot open shared object file: No such file or directory

解决办法：

编译完mosquitto之后，进入到lib目录下，将编译之后的libmosquitto.so.1 拷贝到目录/usr/local/lib下，执行如下命令：
cp libmosquitto.so.1 /usr/local/lib

然后再执行：

执行命令：

sudo ln -s /usr/local/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1

和

ldconfig

即可